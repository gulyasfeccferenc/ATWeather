/// Mixin to prefix a property
/// @author Hugo Giraudel
/// @param {String} $property - Property name
/// @param {*} $value - Property value
/// @param {List} $prefixes (()) - List of prefixes to print
@mixin prefix($property, $value, $prefixes: ('webkit', 'ms', 'o', 'moz')) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
  // Output standard non-prefixed declaration
  #{$property}: $value;
}

section {
  height: 100vh;
  width: 100vw;
  position: relative;
  background-image: url('assets/cloudy_night.png');
  background-size: cover;
  background-position: 50%;
  background-repeat: no-repeat;

  article {
    padding: 24px;
    background: rgba(255,255,255,.25);
    position: absolute;
    top: 50%;
    left: 50%;
    border: 1px solid rgba(255,255,255,.5);
    max-width: 480px;
    width: 100%;
    @include prefix(transform, translate(-50%, -50%));

    h1, p {
      margin: 0 auto;
      text-align: center;
      color: #fff;
      text-shadow: 1px 1px 6px rgba(0,0,0,.5);
    }
    h1 {
      font-size: 32px;
    }
    p {
      font-size: 24px;
      margin: 16px auto;
      &[data-weather-container] {
        font-size: 36px;
      }
    }
  }

  &.clear,
  &.clear-day {
    background-image: url("assets/clear.jpg");
  }
  &.clear-night {
    background-image: url("assets/clear_night.png");
  }
  &.partly-cloudy-day,
  &.wind,
  &.fog,
  &.cloudy {
    background-image: url('assets/cloudy.jpg');
  }
  &.partly-cloudy-night {
    background-image: url('assets/cloudy_night.png');
  }
  &.rain {
    background-image: url('assets/rainy.gif');
  }
  &.sleet,
  &.snow {
    background-image: url('assets/snow.png');
  }
}
